// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { DataEncarApiBrandsListData, DataEncarApiBrandsListResponses, DataEncarApiBrandsRetrieveData, DataEncarApiBrandsRetrieveResponses, DataEncarApiHtmlAnalysisListData, DataEncarApiHtmlAnalysisListResponses, DataEncarApiHtmlAnalysisRetrieveData, DataEncarApiHtmlAnalysisRetrieveResponses, DataEncarApiMetadataListData, DataEncarApiMetadataListResponses, DataEncarApiMetadataRetrieveData, DataEncarApiMetadataRetrieveResponses, DataEncarApiModelGroupsListData, DataEncarApiModelGroupsListResponses, DataEncarApiModelGroupsRetrieveData, DataEncarApiModelGroupsRetrieveResponses, DataEncarApiModelsListData, DataEncarApiModelsListResponses, DataEncarApiModelsRetrieveData, DataEncarApiModelsRetrieveResponses, DataEncarApiOptionsListData, DataEncarApiOptionsListResponses, DataEncarApiOptionsRetrieveData, DataEncarApiOptionsRetrieveResponses, DataEncarApiPhotosListData, DataEncarApiPhotosListResponses, DataEncarApiPhotosRetrieveData, DataEncarApiPhotosRetrieveResponses, DataEncarApiSourceDataListData, DataEncarApiSourceDataListResponses, DataEncarApiSourceDataRetrieveData, DataEncarApiSourceDataRetrieveResponses, DataEncarApiVehiclesListData, DataEncarApiVehiclesListResponses, DataEncarApiVehiclesWebListData, DataEncarApiVehiclesWebListResponses, DataEncarApiVehiclesWebRetrieveData, DataEncarApiVehiclesWebRetrieveResponses, DataEncarApiVehiclesWebSimilarRetrieveData, DataEncarApiVehiclesWebSimilarRetrieveResponses, DataEncarApiVehiclesWebAvailabilityStatsRetrieveData, DataEncarApiVehiclesWebAvailabilityStatsRetrieveResponses, DataEncarApiVehiclesWebFeaturedRetrieveData, DataEncarApiVehiclesWebFeaturedRetrieveResponses, DataEncarApiVehiclesWebFiltersRetrieveData, DataEncarApiVehiclesWebFiltersRetrieveResponses, DataEncarApiVehiclesWebPopularRetrieveData, DataEncarApiVehiclesWebPopularRetrieveResponses, DataEncarApiVehiclesRetrieveData, DataEncarApiVehiclesRetrieveResponses, DataEncarApiVehiclesAccidentAnalysisRetrieveData, DataEncarApiVehiclesAccidentAnalysisRetrieveResponses, DataEncarApiVehiclesDiagnosisAnalysisRetrieveData, DataEncarApiVehiclesDiagnosisAnalysisRetrieveResponses, DataEncarApiVehiclesHistoryRetrieveData, DataEncarApiVehiclesHistoryRetrieveResponses, DataEncarApiVehiclesInspectionRetrieveData, DataEncarApiVehiclesInspectionRetrieveResponses, DataEncarApiVehiclesInspectionAnalysisRetrieveData, DataEncarApiVehiclesInspectionAnalysisRetrieveResponses, DataEncarApiVehiclesLlmAnalysisRetrieveData, DataEncarApiVehiclesLlmAnalysisRetrieveResponses, DataEncarApiVehiclesMetadataRetrieveData, DataEncarApiVehiclesMetadataRetrieveResponses, DataEncarApiVehiclesOptionsListData, DataEncarApiVehiclesOptionsListResponses, DataEncarApiVehiclesPhotosListData, DataEncarApiVehiclesPhotosListResponses, DataEncarApiVehiclesSellingPointsRetrieveData, DataEncarApiVehiclesSellingPointsRetrieveResponses, DataEncarApiVehiclesSummaryRetrieveData, DataEncarApiVehiclesSummaryRetrieveResponses, DataEncarApiVehiclesWarrantyRetrieveData, DataEncarApiVehiclesWarrantyRetrieveResponses, DataEncarApiVehiclesAvailabilityStatsRetrieveData, DataEncarApiVehiclesAvailabilityStatsRetrieveResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Vehicle brands API
 *
 * Provides access to vehicle manufacturers/brands with filtering and search capabilities.
 */
export const dataEncarApiBrandsList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiBrandsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiBrandsListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/brands/',
        ...options
    });
};

/**
 * Vehicle brands API
 *
 * Provides access to vehicle manufacturers/brands with filtering and search capabilities.
 */
export const dataEncarApiBrandsRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiBrandsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiBrandsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/brands/{id}/',
        ...options
    });
};

/**
 * HTML analysis API - V4 Optimized
 *
 * Provides access to HTML extraction and analysis data with LLM processing results.
 */
export const dataEncarApiHtmlAnalysisList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiHtmlAnalysisListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiHtmlAnalysisListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/html-analysis/',
        ...options
    });
};

/**
 * HTML analysis API - V4 Optimized
 *
 * Provides access to HTML extraction and analysis data with LLM processing results.
 */
export const dataEncarApiHtmlAnalysisRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiHtmlAnalysisRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiHtmlAnalysisRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/html-analysis/{listing_id}/',
        ...options
    });
};

/**
 * Metadata API - V4 Optimized
 *
 * Provides access to processing metadata with LLM analysis status and investment grades.
 */
export const dataEncarApiMetadataList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiMetadataListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiMetadataListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/metadata/',
        ...options
    });
};

/**
 * Metadata API - V4 Optimized
 *
 * Provides access to processing metadata with LLM analysis status and investment grades.
 */
export const dataEncarApiMetadataRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiMetadataRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiMetadataRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/metadata/{listing_id}/',
        ...options
    });
};

/**
 * Vehicle model groups API
 *
 * Provides access to vehicle model groups (e.g., Grandeur, Genesis) with brand relationships.
 */
export const dataEncarApiModelGroupsList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiModelGroupsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiModelGroupsListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/model-groups/',
        ...options
    });
};

/**
 * Vehicle model groups API
 *
 * Provides access to vehicle model groups (e.g., Grandeur, Genesis) with brand relationships.
 */
export const dataEncarApiModelGroupsRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiModelGroupsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiModelGroupsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/model-groups/{id}/',
        ...options
    });
};

/**
 * Vehicle models API
 *
 * Provides access to specific vehicle models with detailed grade information and brand hierarchy.
 */
export const dataEncarApiModelsList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiModelsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiModelsListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/models/',
        ...options
    });
};

/**
 * Vehicle models API
 *
 * Provides access to specific vehicle models with detailed grade information and brand hierarchy.
 */
export const dataEncarApiModelsRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiModelsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiModelsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/models/{id}/',
        ...options
    });
};

/**
 * Vehicle options API
 *
 * Provides access to all available vehicle options with filtering by type and search capabilities.
 */
export const dataEncarApiOptionsList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiOptionsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiOptionsListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/options/',
        ...options
    });
};

/**
 * Vehicle options API
 *
 * Provides access to all available vehicle options with filtering by type and search capabilities.
 */
export const dataEncarApiOptionsRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiOptionsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiOptionsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/options/{code}/',
        ...options
    });
};

/**
 * Vehicle photos API
 *
 * Provides access to vehicle photos with filtering by vehicle and photo type.
 */
export const dataEncarApiPhotosList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiPhotosListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiPhotosListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/photos/',
        ...options
    });
};

/**
 * Vehicle photos API
 *
 * Provides access to vehicle photos with filtering by vehicle and photo type.
 */
export const dataEncarApiPhotosRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiPhotosRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiPhotosRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/photos/{id}/',
        ...options
    });
};

/**
 * Source data API - V4 Optimized
 *
 * Provides access to consolidated source data including main data, advertisement,
 * history, inspection, warranty, and selling points in a single optimized model.
 */
export const dataEncarApiSourceDataList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiSourceDataListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiSourceDataListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/source-data/',
        ...options
    });
};

/**
 * Source data API - V4 Optimized
 *
 * Provides access to consolidated source data including main data, advertisement,
 * history, inspection, warranty, and selling points in a single optimized model.
 */
export const dataEncarApiSourceDataRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiSourceDataRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiSourceDataRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/source-data/{listing_id}/',
        ...options
    });
};

/**
 * List vehicles with advanced filtering options including LLM analysis
 */
export const dataEncarApiVehiclesList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/',
        ...options
    });
};

/**
 * Simple web-optimized vehicle viewset
 *
 * Endpoints:
 * - GET /api/vehicles/web/ - List vehicles with filters
 * - GET /api/vehicles/web/{listing_id}/ - Get vehicle detail
 */
export const dataEncarApiVehiclesWebList = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesWebListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesWebListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/',
        ...options
    });
};

/**
 * Simple web-optimized vehicle viewset
 *
 * Endpoints:
 * - GET /api/vehicles/web/ - List vehicles with filters
 * - GET /api/vehicles/web/{listing_id}/ - Get vehicle detail
 */
export const dataEncarApiVehiclesWebRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesWebRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesWebRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/{listing_id}/',
        ...options
    });
};

/**
 * Get similar vehicles
 */
export const dataEncarApiVehiclesWebSimilarRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesWebSimilarRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesWebSimilarRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/{listing_id}/similar/',
        ...options
    });
};

/**
 * Get availability statistics for web interface
 */
export const dataEncarApiVehiclesWebAvailabilityStatsRetrieve = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesWebAvailabilityStatsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesWebAvailabilityStatsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/availability_stats/',
        ...options
    });
};

/**
 * Get featured vehicles for homepage
 */
export const dataEncarApiVehiclesWebFeaturedRetrieve = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesWebFeaturedRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesWebFeaturedRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/featured/',
        ...options
    });
};

/**
 * Get available filter options for frontend
 */
export const dataEncarApiVehiclesWebFiltersRetrieve = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesWebFiltersRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesWebFiltersRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/filters/',
        ...options
    });
};

/**
 * Get popular vehicles by brand/model
 */
export const dataEncarApiVehiclesWebPopularRetrieve = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesWebPopularRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesWebPopularRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles-web/popular/',
        ...options
    });
};

/**
 * Main vehicles API with comprehensive nested data access - V4 Updated.
 *
 * This ViewSet provides:
 * - List view with basic vehicle information
 * - Detail view with all related data including LLM analysis
 * - Nested endpoints for specific data types
 * - Advanced filtering and search capabilities
 */
export const dataEncarApiVehiclesRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/',
        ...options
    });
};

/**
 * Get vehicle accident analysis extracted from HTML
 */
export const dataEncarApiVehiclesAccidentAnalysisRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesAccidentAnalysisRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesAccidentAnalysisRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/accident-analysis/',
        ...options
    });
};

/**
 * Get vehicle diagnosis analysis extracted from HTML
 */
export const dataEncarApiVehiclesDiagnosisAnalysisRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesDiagnosisAnalysisRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesDiagnosisAnalysisRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/diagnosis-analysis/',
        ...options
    });
};

/**
 * Get vehicle history and accident data
 */
export const dataEncarApiVehiclesHistoryRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesHistoryRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesHistoryRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/history/',
        ...options
    });
};

/**
 * Get vehicle technical inspection data
 */
export const dataEncarApiVehiclesInspectionRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesInspectionRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesInspectionRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/inspection/',
        ...options
    });
};

/**
 * Get vehicle inspection analysis extracted from HTML
 */
export const dataEncarApiVehiclesInspectionAnalysisRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesInspectionAnalysisRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesInspectionAnalysisRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/inspection-analysis/',
        ...options
    });
};

/**
 * Get complete LLM analysis results for the vehicle
 */
export const dataEncarApiVehiclesLlmAnalysisRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesLlmAnalysisRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesLlmAnalysisRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/llm-analysis/',
        ...options
    });
};

/**
 * Get vehicle processing metadata and statistics
 */
export const dataEncarApiVehiclesMetadataRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesMetadataRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesMetadataRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/metadata/',
        ...options
    });
};

/**
 * Get all options for a specific vehicle
 */
export const dataEncarApiVehiclesOptionsList = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesOptionsListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesOptionsListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/options/',
        ...options
    });
};

/**
 * Get all photos for a specific vehicle
 */
export const dataEncarApiVehiclesPhotosList = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesPhotosListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesPhotosListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/photos/',
        ...options
    });
};

/**
 * Get vehicle selling points and marketing data
 */
export const dataEncarApiVehiclesSellingPointsRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesSellingPointsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesSellingPointsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/selling-points/',
        ...options
    });
};

/**
 * Get complete vehicle data summary with V4 features
 */
export const dataEncarApiVehiclesSummaryRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesSummaryRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesSummaryRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/summary/',
        ...options
    });
};

/**
 * Get vehicle warranty information
 */
export const dataEncarApiVehiclesWarrantyRetrieve = <ThrowOnError extends boolean = false>(options: Options<DataEncarApiVehiclesWarrantyRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DataEncarApiVehiclesWarrantyRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/{listing_id}/warranty/',
        ...options
    });
};

/**
 * Get availability statistics for all vehicles
 */
export const dataEncarApiVehiclesAvailabilityStatsRetrieve = <ThrowOnError extends boolean = false>(options?: Options<DataEncarApiVehiclesAvailabilityStatsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<DataEncarApiVehiclesAvailabilityStatsRetrieveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/apix/data_encar_api/vehicles/availability-stats/',
        ...options
    });
};